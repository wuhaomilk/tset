*************************
class 图
*************************

1.class 图
 定义：对于具有相同属性、操作、关系的对象集合抽象后的总称。
 表现系统的静态构造。
 表现类之间的静态关系。

2.class的关系
 纵向关系：泛化和实现->（继承关系）
 横向关系：依赖，关联，聚合，组合 
 横向关系的强弱： 依赖 < 关联 < 聚合 < 组合

3.依赖关系：use a 符号：---->
  关联关系: has a  符号：实线+>
  聚合关系:owns a  符号：菱形+实线+>
  聚合关系:is a part of 符号：实心菱形+实线+>
  组合是聚合关系的增强版
  继承关系
  泛化：从既存的Class推出更一般化的Class 符号：实线+空三角
  实现：一个类指定了另外一个类保证执行的契约关系。符号：虚线+空三角
  
4. 关联关系:
  关联就是某个对象会长期的持有另一个对象的引用，
  而二者的关联往往也是相互的。
  关联关系：多重度:1个ClassA中对应另一方Class的Instance（ObjectB）的数目叫做多重度

5.聚合关系:
  强调的是整体与部分之间的关系

6.组合关系:是聚合关系的增强版
  在组合中，整体和部分之间具有很强的所有关系，
  并且两者的生命周期是一致的。

7.class元素
  public (+)，protected (#)，private (-)， package (~)

***************************************************
usecase图
*************************************************

1.usecase图
  明确区分System内部和外部的存在，
  表明外部的存在与表示System的哪个机能相関

2.组成部分
  Use case （用例），Actor （参与者），Communication関連

3. Use case间关系
  包含关系：多个用例都会使用相同的行为，抽象为一个用例，其他用例使用它，避免重复设计，必须存在
  扩展关系：备选动作
  继承关系：泛化







